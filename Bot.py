"""–î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—ó —Ä–æ–±–æ—Ç–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ:
 pip install googletrans==4.0.0-rc1
 pip install art
 pip install openai
 pip install pyjokes
 pip install pyTelegramBotAPI
"""


import random
import openai
import art
import pyjokes
import telebot
from googletrans import Translator
from telebot import types

API_TOKEN = "—Ç—É—Ç –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ –≤–∞—à –∞–ø—ñ"
bot = telebot.TeleBot(API_TOKEN)

random_nums = [str(random.randint(1, 15)) for _ in range(0, 9)]
right_num = random_nums[random.randint(0, 8)]
print(right_num)


@bot.message_handler(commands=["start"])
def start(message):
    button_bar = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    but_1 = types.KeyboardButton("–ü–æ–∂–∞—Ä—Ç—É–πüòÇ")
    but_2 = types.KeyboardButton("–í–∏–ø–∞–¥–∫–æ–≤–∏–π ASCI –∞—Ä—Çüé≠")
    but_3 = types.KeyboardButton("–í–∏–ø–∞–¥–∫–æ–≤–∏–π —Ñ—ñ–ª—å–ºüé¨")
    but_4 = types.KeyboardButton("–ì—Ä–∞üéÆ")
    but_5 = types.KeyboardButton("–ö–Ω–∏–≥–∏üìï")
    but_6 = types.KeyboardButton("–ü–µ—Ä–µ–∫–ª–∞–¥")

    button_bar.add(but_1, but_2, but_3, but_4, but_5, but_6)

    first = message.from_user.first_name
    last = "" if message.from_user.last_name == first or message.from_user.last_name is None \
        else message.from_user.last_name
    repl = f"–ü—Ä–∏–≤—ñ—Ç {first} {last}\n–©–æ–± –ø–æ—Å–ø—ñ–ª–∫—É–≤–∞—Ç–∏—Å—å –∑ chat-GPT, –ø–µ—Ä–µ–¥ —Ä–µ–ø–ª—ñ–∫–æ—é –≤–≤–µ–¥—ñ—Ç—å gpt:"

    bot.send_message(message.chat.id, text=repl, reply_markup=button_bar)


@bot.message_handler(content_types=["text"])
def fun(message):
    global random_nums, right_num

    if message.text == "–ü–æ–∂–∞—Ä—Ç—É–πüòÇ":
        translator = Translator()
        joke = pyjokes.get_joke(language="en", category="chuck")
        translation = translator.translate(joke, dest="uk")
        bot.send_message(message.chat.id, text=translation.text)

    elif message.text == "–í–∏–ø–∞–¥–∫–æ–≤–∏–π —Ñ—ñ–ª—å–ºüé¨":
        link_bar = types.InlineKeyboardMarkup()
        link_line = types.InlineKeyboardButton(text="–í–∏–ø–∞–¥–∫–æ–≤–∏–π —Ñ—ñ–ª—å–º", url="https://gidonline.io/random/")
        link_bar.add(link_line, row_width=1)
        bot.send_message(message.chat.id, text="–ü–µ—Ä–µ–π–¥—ñ—Ç—å –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º –Ω–∏–∂—á–µ üëá", reply_markup=link_bar)

    elif message.text == "–í–∏–ø–∞–¥–∫–æ–≤–∏–π ASCI –∞—Ä—Çüé≠":
        bot.send_message(message.chat.id, text=f"{art.randart()}")

    elif message.text == "–ì—Ä–∞üéÆ":
        game_bar = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
        but_1 = types.KeyboardButton(random_nums[0])
        but_2 = types.KeyboardButton(random_nums[1])
        but_3 = types.KeyboardButton(random_nums[2])
        but_4 = types.KeyboardButton(random_nums[3])
        but_5 = types.KeyboardButton(random_nums[4])
        but_6 = types.KeyboardButton(random_nums[5])
        but_7 = types.KeyboardButton(random_nums[6])
        but_8 = types.KeyboardButton(random_nums[7])
        but_9 = types.KeyboardButton(random_nums[8])
        game_bar.add(but_1, but_2, but_3, but_4, but_5, but_6, but_7, but_8, but_9)
        bot.send_message(message.chat.id, text="–í–≥–∞–¥–∞–π —á–∏—Å–ª–æ", reply_markup=game_bar)

    elif message.text in random_nums:

        if message.text == right_num:
            bot.send_message(message.chat.id, text=f"–í—ñ—Ä–Ω–∞ –∑–¥–æ–≥–∞–¥–∫–∞ ü´µü•≥")
            start(message)
            random_nums = [str(random.randint(1, 15)) for _ in range(0, 9)]
            right_num = random_nums[random.randint(0, 8)]
            print(right_num)

        elif int(message.text) < int(right_num):
            bot.send_message(message.chat.id, text="–ó–∞–≥–∞–¥–∞–Ω–µ —á–∏—Å–ª–æ –±—ñ–ª—å—à–µ")

        elif int(message.text) > int(right_num):
            bot.send_message(message.chat.id, text="–ó–∞–≥–∞–¥–∞–Ω–µ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µ")

    elif message.text == "–ö–Ω–∏–≥–∏üìï":
        book_shelf = types.InlineKeyboardMarkup(row_width=1)
        book = types.InlineKeyboardButton(text="üìì",
                                          url="https://starylev.com.ua/mort")
        book_shelf.add(book)
        bot.send_photo(chat_id=message.chat.id,
                       photo="https://img.imageboss.me/vsl/width/922/2021-10-09/rjaqpqzjygefnxd2zbw7.png",
                       caption="""
–†–æ–º–∞–Ω ¬´–ú–æ—Ä—Ç¬ª
—Ü–∏–∫–ª—É ¬´–°–º–µ—Ä—Ç—å¬ª –≤—ñ–¥–∫—Ä–∏–≤–∞—î —Ü–∏–∫–ª —Å–µ—Ä—ñ—ó ¬´–î–∏—Å–∫–æ—Å–≤—ñ—Ç¬ª, —É —è–∫–æ–º—É –≥–æ–ª–æ–≤–Ω–∏–º –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–º —î –°–º–µ—Ä—Ç—å.
–¢–∞ —Ü–µ –Ω–µ –æ–∑–Ω–∞—á–∞—î, —â–æ –∫–Ω–∏–∂–∫–∞ –º–æ—Ç–æ—Ä–æ—à–Ω–∞, –∞–¥–∂–µ —É —Å–≤—ñ—Ç—ñ –¢–µ—Ä—Ä—ñ –ü—Ä–∞—Ç—á–µ—Ç—Ç–∞ –°–º–µ—Ä—Ç—å —Ä–∏–±–∞–ª–∏—Ç—å, —Ñ—ñ–ª–æ—Å–æ—Ñ—É—î, –ª—é–±–∏—Ç—å –∫–æ—à–µ–Ω—è—Ç
—ñ —Å–º–∞—á–Ω—ñ —Å—Ç—Ä–∞–≤–∏, –º—Ä—ñ—î –ø—Ä–æ –≤—ñ–¥–ø—É—Å—Ç–∫—É —ñ –≤—Ä–µ—à—Ç—ñ –ø—Ä–æ—Å—Ç–æ –≤–∏–∫–æ–Ω—É—î —Å–≤–æ—é —Ä–æ–±–æ—Ç—É: –¥–æ–ø—Ä–∞–≤–ª—è—î –¥—É—à—ñ –≤ —ñ–Ω—à–∏–π —Å–≤—ñ—Ç. –î—É–º–∫–∏ –ø—Ä–æ
–≤—ñ–¥–ø–æ—á–∏–Ω–æ–∫ —Å–ø–æ–Ω—É–∫–∞—é—Ç—å –°–º–µ—Ä—Ç—å –æ–±—Ä–∞—Ç–∏ —Å–æ–±—ñ –≤ –ø—ñ–¥–º–∞–π—Å—Ç—Ä–∏ —Å—ñ–ª—å—Å—å–∫–æ–≥–æ —Ö–ª–æ–ø—Ü—è –ú–æ—Ä—Ç–∞
""")
        bot.send_message(message.chat.id, text="–ö–Ω–∏–≥–∞ –∑–∞ –ø–æ—Å–∏–ª–∞–Ω—è–º", reply_markup=book_shelf)
        book_shelf_2 = types.InlineKeyboardMarkup(row_width=1)
        book_2 = types.InlineKeyboardButton(text="üìì",
                                            url="https://book-ye.com.ua/catalog/naukova-fantastyka/pisni-giperiona-"
                                                "knyha-1-giperion-chumatskyj-shlyakh/")
        book_shelf_2.add(book_2)
        bot.send_photo(chat_id=message.chat.id,
                       photo="https://book-ye.com.ua/upload/resize_cache/iblock/062/520_860_1/0eac02d3_0e4d_11e7_80c5_"
                             "000c29ae1566_a18d0d68_666a_11ed_8175_0050568ef5e6.jpg",
                       caption="""
–†–æ–º–∞–Ω ¬´–ì—ñ–ø–µ—Ä—ñ–æ–Ω¬ª
–ú–∏–Ω–µ —è–∫–∏—Ö–æ—Å—å –≤—ñ—Å—ñ–º—Å–æ—Ç —Ä–æ–∫—ñ–≤, —ñ –¥–æ –∑–∞–≥–∞–¥–∫–æ–≤–∏—Ö –ì—Ä–æ–±–Ω–∏—Ü—å —á–∞—Å—É, —â–æ –ø–æ—Ä—É—à—É—é—Ç—å –∑–∞–∫–æ–Ω–∏ –ù—å—é—Ç–æ–Ω–∞ —Ç–∞ –∑–∞–≥–∞–ª—å–Ω—É —Ç–µ–æ—Ä—ñ—é 
–≤—ñ–¥–Ω–æ—Å–Ω–æ—Å—Ç—ñ, –Ω–∞ –∞–±—Å–æ–ª—é—Ç–Ω–æ –ø—Ä–æ–≤—ñ–Ω—Ü—ñ–π–Ω—É –ø–ª–∞–Ω–µ—Ç—É –ì—ñ–ø–µ—Ä—ñ–æ–Ω –≤–∏—Ä—É—à–∏—Ç—å –¥–∏–≤–Ω–∞ –¥–µ–ª–µ–≥–∞—Ü—ñ—è –¥–∏–≤–Ω–æ–≥–æ –∫—É–ª—å—Ç—É, —è–∫–∏–π –±–æ–≥–æ—Ç–≤–æ—Ä–∏—Ç—å
–Ω–µ–≤–±–ª–∞–≥–∞–Ω–Ω–æ–≥–æ –º–æ–Ω—Å—Ç—Ä–∞. –ö–∞—Ç–æ–ª–∏—Ü—å–∫–∏–π —Å–≤—è—â–µ–Ω–Ω–∏–∫, –ø–æ–ª–∫–æ–≤–Ω–∏–∫ –≤—ñ–π—Å—å–∫–æ–≤–æ-–∫–æ—Å–º—ñ—á–Ω–∏—Ö —Å–∏–ª, –≥–µ–Ω—ñ–∞–ª—å–Ω–∏–π –ø–æ–µ—Ç-–ª–∏—Ö–æ—Å–ª–æ–≤, 
—Ç–∞–º–ø–ª—ñ—î—Ä, —â–æ –≤–æ–¥–∏—Ç—å –∑–æ—Ä–µ–ª—ñ—Ç-–¥–µ—Ä–µ–≤–æ, —Ç–∏—Ö–∏–π —Ñ—ñ–ª–æ—Å–æ—Ñ, –ø—Ä–∏–≤–∞—Ç–Ω–∏–π –¥–µ—Ç–µ–∫—Ç–∏–≤ —Ç–∞ –±–µ–∑—ñ–º–µ–Ω–Ω–∏–π –¥–∏–ø–ª–æ–º–∞—Ç ‚Äì –∫–æ–∂–µ–Ω —ñ–∑ 
–Ω–∏—Ö –º–∞—î –∑–∞–ø–æ–≤—ñ—Ç–Ω–µ –±–∞–∂–∞–Ω–Ω—è —ñ –ø–æ—Ç–∞—î–º–Ω—É —Ü—ñ–ª—å, –≤—ñ–¥ —è–∫–∏—Ö –º–æ–∂–µ –∑–∞–ª–µ–∂–∞—Ç–∏ –º–∞–π–±—É—Ç–Ω—î –Ω–µ —Ç—ñ–ª—å–∫–∏ –∫—ñ–ª—å–∫–∞–Ω–∞–¥—Ü—è—Ç–∏ –º—ñ–ª—å—è—Ä–¥—ñ–≤ 
–ª—é–¥–µ–π –Ω–∞ –¥–≤–æ—Ö —Å–æ—Ç–Ω—è—Ö –ø–ª–∞–Ω–µ—Ç, –∞ –π —à—Ç—É—á–Ω–∏—Ö —ñ–Ω—Ç–µ–ª–µ–∫—Ç—ñ–≤ —Ç–∞ –∑–∞–≥–∞–¥–∫–æ–≤–æ—ó –ø–æ—Å—Ç–ª—é–¥—Å—å–∫–æ—ó —Ä–∞—Å–∏ –í–∏–≥–Ω–∞–Ω—Ü—ñ–≤. –í –µ–ø—ñ—Ü–µ–Ω—Ç—Ä—ñ 
–ø—Ä–∏—Å—Ç—Ä–∞—Å—Ç–µ–π —Ç–∞ –ø–æ–ª—ñ—Ç–∏—á–Ω–∏—Ö —ñ–Ω—Ç—Ä–∏–≥ ‚Äî –ì—ñ–ø–µ—Ä—ñ–æ–Ω
        """)
        bot.send_message(message.chat.id, text="–ö–Ω–∏–≥–∞ –∑–∞ –ø–æ—Å–∏–ª–∞–Ω—è–º", reply_markup=book_shelf_2)

    elif message.text == "–ü–µ—Ä–µ–∫–ª–∞–¥":
        bot.send_message(message.chat.id, text="""
–í–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç –¥–ª—è –ø–µ—Ä–µ–∫–ª–∞–¥—É,
—É —Ñ–æ—Ä–º–∞—Ç—ñ- zz_translate:—Ö—Ö—Ö—Ö—Ö—Ö—Ö—Ö

zz - –º–æ–≤–∞ –ø–µ—Ä–µ–∫–ª–∞–¥—É 
                    af afrikaans
                    sq albanian
                    am amharic
                    ar arabic
                    hy armenian
                    az azerbaijani
                    eu basque
                    be belarusian
                    uk ukrainian

—Ö—Ö—Ö—Ö - —Ç–µ–∫—Å—Ç –¥–ª—è –ø–µ—Ä–µ–∫–ª–∞–¥—É""")
    elif "_translate:" in message.text:
        translator = Translator()
        translated_text = translator.translate(text=message.text[13:], dest=message.text[:2])
        bot.send_message(message.chat.id, text=translated_text.text)

    elif "gpt:" in message.text:
        openai.api_key = "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"
        messages = [{"role": "user", "content": message.text[4:]}]
        chat = openai.ChatCompletion.create(model="gpt-3.5-turbo", messages=messages)
        reply = chat.choices[0].message["content"]
        bot.send_message(message.chat.id, text=reply)
        messages.append({"role": "assistant", "content": reply})


bot.polling()
